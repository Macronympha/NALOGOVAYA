@{ var menus = new[]
                            {
                   new { LinkText="Панель администратора", ActionName="Admin", ControllerName="Home", Roles="Admin"  },
                   new { LinkText="АКТы", ActionName="Index", ControllerName="ACTs1", Roles="Admin,TechSpecialist"  },
                    new { LinkText="Выход", ActionName="Logout", ControllerName="Home", Roles="Admin,TechSpecialist"  }
                   //new { LinkText="Если для авторизованных и неавторизованных", ActionName="Client", ControllerName="Home", Roles="All"  },
                }; }
<ul id="menu" class="nav navbar-nav" style="float: none;">
    @if (HttpContext.Current.User.Identity.IsAuthenticated)
    {
        String[] roles = Roles.GetRolesForUser();
        var links = from item in menus
                    where item.Roles.Split(new String[] { "," }, StringSplitOptions.RemoveEmptyEntries)
                    .Any(x => roles.Contains(x) || x == "All")
                    select item;
        foreach (var link in links)
        {
<li> @Html.ActionLink(link.LinkText, link.ActionName, link.ControllerName)</li> }
<li style=" text-align: right; float: right; white-space: nowrap; display: block; padding: 15px 0px; color: #9d9d9d;">
    Добро пожаловать, @User.Identity.FullName()
</li> }
            else
            {
                var links = from item in menus
                            where item.Roles.Split(new String[] { "," }, StringSplitOptions.RemoveEmptyEntries)
                            .Any(x => new String[] { "All", "Anonymous" }.Contains(x))
                            select item;
                foreach (var link in links)
                {
@:
<li> @Html.ActionLink(link.LinkText, link.ActionName, link.ControllerName)</li>}
            }
</ul> 